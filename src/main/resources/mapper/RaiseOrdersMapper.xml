<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.blogss.mapper.RaiseOrdersMapper" >
  <resultMap id="BaseResultMap" type="cn.blogss.pojo.RaiseOrders" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="raise_id" property="raiseId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="num" property="num" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <!--配置多对一关联关系-->
    <association column="raise_id" property="raise" javaType="cn.blogss.pojo.Raise"
                 select="cn.blogss.mapper.RaiseMapper.selectByPrimaryKey"></association>

  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, raise_id, user_id, amount, payment, create_time, num, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from raise_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from raise_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.blogss.pojo.RaiseOrders" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into raise_orders (id, raise_id, user_id, 
      amount, payment, create_time, 
      num, status)
    values (#{id,jdbcType=INTEGER}, #{raiseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{amount,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{num,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.blogss.pojo.RaiseOrders" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert ignore into raise_orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="raiseId != null" >
        raise_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="raiseId != null" >
        #{raiseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null" >
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.blogss.pojo.RaiseOrders" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update raise_orders
    <set >
      <if test="raiseId != null" >
        raise_id = #{raiseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.blogss.pojo.RaiseOrders" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update raise_orders
    set raise_id = #{raiseId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      num = #{num,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryByIdWithSucKill" resultMap="BaseResultMap">
      SELECT <include refid="Base_Column_List"/>
      from raise_orders WHERE raise_id = #{raiseId} AND user_id = #{userId}
  </select>

    <select id="queryByUserId" resultMap="BaseResultMap" parameterType="Integer">
        SELECT <include refid="Base_Column_List"/>
        FROM raise_orders WHERE user_id = #{userId}
        ORDER by create_time DESC
    </select>

    <select id="querySomeByRaiseId" parameterType="Integer" resultType="Map">
        SELECT u.name,r.amount,r.create_time from users u
        INNER  join raise_orders r ON u.id = r.user_id
        WHERE raise_id = #{raiseId}
    </select>

    <!--后台订单查看,分页-->
    <select id="selectRaiseOrdersByPage" resultType="Map">
        select r.name,u.username,ro.amount,ro.payment,ro.create_time,ro.status,ro.id
        from raise_orders ro
        INNER join users u ON ro.user_id = u.id
        INNER JOIN raise r on ro.raise_id = r.id
        where 1=1
        <if test="username != null and username != ''">
          and u.username like concat('%',#{username},'%')
        </if>
        order by ro.create_time DESC
        limit #{pageIndex},#{pageSize}
    </select>

    <!--总记录数-->
    <select id="totRecord" parameterType="string" resultType="int">
        SELECT count(*) from  raise_orders r INNER JOIN users u
        on r.user_id = u.id
        where 1=1
        <if test="username != null and username != ''">
          and u.username like concat('%',#{username},'%')
        </if>
    </select>

    <delete id="delBatch">
        delete from raise_orders
        where id in
        <foreach close=")" collection="array" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>
</mapper>