<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.blogss.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="cn.blogss.pojo.Users">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="paypwd" jdbcType="VARCHAR" property="paypwd" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, password, name, phone, email, image, paypwd, status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.blogss.pojo.Users">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into users (id, username, password, 
      name, phone, email, image, 
      paypwd, status, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{paypwd,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.blogss.pojo.Users">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert ignore into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="paypwd != null">
        paypwd,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="paypwd != null">
        #{paypwd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.blogss.pojo.Users">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="paypwd != null">
        paypwd = #{paypwd,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.blogss.pojo.Users">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      paypwd = #{paypwd,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--后台用户查看,分页-->
    <select id="selectUsersByPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from users
        where 1=1
        <if test="users.name != null and users.name != ''">
            and name like concat('%',#{users.name},'%')
        </if>
        <if test="users.username != null and users.username != ''">
            and username = #{users.username}
        </if>
        <if test="users.phone != null and users.phone != ''">
            and phone = #{users.phone}
        </if>
        <if test="users.status != null and users.status != ''">
            and status = #{users.status}
        </if>
        limit #{pageIndex},#{pageSize}
    </select>

    <!--总记录数-->
    <select id="totRecord" parameterType="Users" resultType="int">
        SELECT count(*) from  users where 1=1
        <if test="name != null and name != ''">
            and name like concat('%',#{name},'%')
        </if>
        <if test="username != null and username != ''">
            and username like concat('%',#{username},'%')
        </if>
        <if test="phone != null and phone != ''">
            and phone like concat('%',#{phone},'%')
        </if>
        <if test="status != null and status != ''">
            and status = #{status}
        </if>
    </select>

    <delete id="delBatch">
        delete from users
        where id in
        <foreach close=")" collection="array" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>  

  <!--根据用户名查询-->
  <select id="getUsersByUsersName" parameterType="String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from users
    where username = #{userName,jdbcType=VARCHAR}
  </select>

    <!--根据用户名查询用户角色-->
    <select id="queryRolesByUsersName" parameterType="String" resultType="String">
      select role_name from user_roles
      where username = #{userName}
    </select>

    <!--根据用户名查询权限数据-->
    <select id="queryPermissionsByUsersName" parameterType="String" resultType="String">
        select rp.permission from user_roles ur INNER  JOIN roles_permissions rp
        on ur.role_name = rp.role_name where ur.username = #{userName}
    </select>

    <!--根据用户ID和密码来查询用户-->
    <select id="queryUserByIDAndPwd" resultType="Integer">
        SELECT count(*) from users
        WHERE id = #{id} and password = #{password}
    </select>

    <!--查询邮箱-->
    <select id="queryByEmail" resultType="Integer">
        SELECT COUNT(*) from users
        WHERE email = #{email}
    </select>

    <!--查询手机-->
    <select id="queryByPhone" resultType="Integer">
        SELECT COUNT(*) from users
        WHERE phone = #{phone}
    </select>

    <update id="updateEmailById">
        update users SET email = #{email} WHERE id = #{id}
    </update>

    <update id="updatePhoneById">
        update users SET phone = #{phone} WHERE id = #{id}
    </update>

    <update id="updatePwdById">
        update users SET password = #{password} WHERE id = #{id}
    </update>
</mapper>